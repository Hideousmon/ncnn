name: release-python-pnnx
# on: [push, pull_request]
on:
  push:
   tags:
     - '*'

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install deps
      run: python -m pip install twine build

    - name: Build SDist
      run: |
          cd tools/pnnx  
          python -m build -s

    - name: Check metadata
      run: |
        cd tools/pnnx  
        twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: tools/pnnx/dist/*.tar.gz

  build_wheels:
    name:  python ${{ matrix.pyversion }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest, pyversion: '3.6' }
          # - { os: ubuntu-latest, pyversion: '3.7' } # error: no rule to make target libopenblas.so
          - { os: ubuntu-latest, pyversion: '3.8' }
          - { os: ubuntu-latest, pyversion: '3.9' }
          - { os: ubuntu-latest, pyversion: '3.10'}
          - { os: ubuntu-latest, pyversion: '3.11'}
          # - { os: ubuntu-latest, pyversion: '3.12'} # error: package version conflicts
          # - { os: windows-latest, pyversion: '3.6' } # error: Python ABI tag may be incorrect
          - { os: windows-latest, pyversion: '3.7' }
          - { os: windows-latest, pyversion: '3.8' }
          - { os: windows-latest, pyversion: '3.9' }
          - { os: windows-latest, pyversion: '3.10'}
          - { os: windows-latest, pyversion: '3.11'}
          # - { os: windows-latest, pyversion: '3.12'} # error: package version conflicts
          # - { os: macos-latest, pyversion: '3.6' } # error: not a supported wheel on this platform
          # - { os: macos-latest, pyversion: '3.7' } # error: not a supported wheel on this platform
          # - { os: macos-latest, pyversion: '3.8' } # error: not a supported wheel on this platform
          - { os: macos-latest, pyversion: '3.9' }
          - { os: macos-latest, pyversion: '3.10'}
          - { os: macos-latest, pyversion: '3.11'}
          # - { os: macos-latest, pyversion: '3.12'} # error: package version conflicts

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.pyversion }}
        conda-channels: anaconda, conda-forge

    # build wheels for ubuntu-latest
    - name: Build wheels for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install protobuf-compiler
        conda install pytorch -y
        export PYTHON_EXECUTABLE="/usr/share/miniconda/envs/__setup_conda/bin/python"
        export PYTHON_DIR="/usr/share/miniconda/envs/__setup_conda/bin"
        cd tools/pnnx/
        pip install wheel setuptools 
        python setup.py bdist_wheel
        cd ./dist
        pip install pytest numpy
        pip install ./pnnx*
        cd ../python
        pytest tests

    - name: Install torch for windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |  
        conda install pytorch -y

    - name: Build wheels for windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |  
        set PYTHON_EXECUTABLE=C:/Miniconda/envs/__setup_conda/python.exe
        set PYTHON_DIR=C:/Miniconda/envs/__setup_conda
        cd tools/pnnx/
        pip install wheel setuptools delvewheel
        python setup.py bdist_wheel
        cd ./dist
        for %%F in (./*.whl) do python -m delvewheel repair -w ./ "%%~fF" --add-path "C:/Miniconda/envs/__setup_conda/Lib/site-packages/torch/lib"
        pip install pytest numpy
        for %%F in (./*.whl) do pip install "%%~fF"
        cd ../python
        pytest tests
    
    # build wheels for macos-latest
    - name: Build wheels for macos
      if: matrix.os == 'macos-latest'
      run: |
        brew install protobuf
        conda install pytorch -y
        export PYTHON_EXECUTABLE="/usr/local/miniconda/envs/__setup_conda/bin/python"
        export PYTHON_DIR="/usr/local/miniconda/envs/__setup_conda/bin"
        cd tools/pnnx/
        pip install wheel setuptools delocate
        export PLATFORM="MAC"
        export ARCHS="x86_64"
        export DEPLOYMENT_TARGET="10.9"
        export DYLD_LIBRARY_PATH=/usr/local/miniconda/envs/__setup_conda/lib:$DYLD_LIBRARY_PATH
        LDFLAGS="-L/usr/local/miniconda/envs/__setup_conda/lib" python setup.py bdist_wheel
        cd ./dist
        pip install pytest numpy
        pip install ./pnnx*
        cd ../python
        pytest tests

    - name: Show files
      run: ls -lh tools/pnnx/dist
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: tools/pnnx/dist/*.whl

  upload_all:
    permissions:
      contents: none
    name: Upload
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    # - uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_API_TOKEN }}